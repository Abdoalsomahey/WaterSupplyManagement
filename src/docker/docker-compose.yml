version: '3.8'

services:
  water_web:
    container_name: water_web
    build:
      context: ../
      dockerfile: docker/backend_docker/Dockerfile
    restart: on-failure
    ports:
      - "8000:8000"
    depends_on:
      - water_postgres
      - water_redis
    env_file:
      - ./.env
    volumes:
      - ../backend:/app
      - ../frontend:/usr/share/nginx/html
      - ../backend/media:/app/media
    networks:
      - water_management_net
    entrypoint: ["/water_app/entrypoint.sh"]
    command: gunicorn water_website.wsgi:application --bind 0.0.0.0:8000 --workers 3


  water_postgres:
    image: postgres:latest
    container_name: water_postgres
    restart: always
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - water_management_net

  water_redis:
    image: redis:latest
    container_name: water_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - water_management_net

  water_celery_worker:
    container_name: water_celery_worker
    restart: on-failure
    build:
      context: ../
      dockerfile: docker/backend_docker/Dockerfile
    volumes:
      - ../backend:/app
    env_file:
      - ./.env
    depends_on:
      - water_redis
    networks:
      - water_management_net
    entrypoint: ["/water_app/entrypoint.sh"]
    command: celery -A water_website worker -l info

  water_celery_beat:
    container_name: water_celery_beat
    restart: on-failure
    build:
      context: ../
      dockerfile: docker/backend_docker/Dockerfile
    volumes:
      - ../backend:/app
    env_file:
      - ./.env
    depends_on:
      - water_redis
    networks:
      - water_management_net
    entrypoint: ["/water_app/entrypoint.sh"]
    command: celery -A water_website beat -l info


  water_nginx:
    container_name: water_nginx
    build:
      context: ../../
      dockerfile: src/docker/nginx/Dockerfile
    volumes:
      - ../frontend:/usr/share/nginx/html
      - ../backend/media:/usr/share/nginx/html/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - water_web
    restart: always
    networks:
      - water_management_net

volumes:
  postgres_data:
  redis_data:

networks:
  water_management_net:
    driver: bridge


